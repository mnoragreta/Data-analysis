2024-02-13 12:54:30,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-13 12:54:30,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-13 12:54:30,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-13 12:54:30,704:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-02-13 12:54:31,380:INFO:PyCaret ClassificationExperiment
2024-02-13 12:54:31,380:INFO:Logging name: clf-default-name
2024-02-13 12:54:31,380:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-02-13 12:54:31,380:INFO:version 3.2.0
2024-02-13 12:54:31,380:INFO:Initializing setup()
2024-02-13 12:54:31,380:INFO:self.USI: 3c7c
2024-02-13 12:54:31,380:INFO:self._variable_keys: {'y', 'html_param', 'X', 'log_plots_param', '_available_plots', 'pipeline', 'USI', 'fold_shuffle_param', 'fix_imbalance', 'data', 'memory', 'target_param', 'fold_generator', 'idx', 'seed', 'is_multiclass', 'gpu_n_jobs_param', 'y_test', '_ml_usecase', 'X_test', 'fold_groups_param', 'y_train', 'exp_name_log', 'exp_id', 'logging_param', 'X_train', 'gpu_param', 'n_jobs_param'}
2024-02-13 12:54:31,385:INFO:Checking environment
2024-02-13 12:54:31,385:INFO:python_version: 3.11.5
2024-02-13 12:54:31,385:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-02-13 12:54:31,385:INFO:machine: AMD64
2024-02-13 12:54:31,385:INFO:platform: Windows-10-10.0.22631-SP0
2024-02-13 12:54:31,385:INFO:Memory: svmem(total=6280372224, available=1251401728, percent=80.1, used=5028970496, free=1251401728)
2024-02-13 12:54:31,385:INFO:Physical Core: 4
2024-02-13 12:54:31,385:INFO:Logical Core: 8
2024-02-13 12:54:31,385:INFO:Checking libraries
2024-02-13 12:54:31,385:INFO:System:
2024-02-13 12:54:31,385:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-02-13 12:54:31,385:INFO:executable: C:\Users\lily\anaconda3\python.exe
2024-02-13 12:54:31,385:INFO:   machine: Windows-10-10.0.22631-SP0
2024-02-13 12:54:31,385:INFO:PyCaret required dependencies:
2024-02-13 12:54:31,387:INFO:                 pip: 23.3.1
2024-02-13 12:54:31,387:INFO:          setuptools: 68.0.0
2024-02-13 12:54:31,387:INFO:             pycaret: 3.2.0
2024-02-13 12:54:31,387:INFO:             IPython: 8.15.0
2024-02-13 12:54:31,387:INFO:          ipywidgets: 8.0.4
2024-02-13 12:54:31,387:INFO:                tqdm: 4.65.0
2024-02-13 12:54:31,387:INFO:               numpy: 1.25.2
2024-02-13 12:54:31,387:INFO:              pandas: 2.0.0
2024-02-13 12:54:31,387:INFO:              jinja2: 3.1.2
2024-02-13 12:54:31,387:INFO:               scipy: 1.11.4
2024-02-13 12:54:31,387:INFO:              joblib: 1.3.2
2024-02-13 12:54:31,387:INFO:             sklearn: 1.3.2
2024-02-13 12:54:31,387:INFO:                pyod: 1.1.2
2024-02-13 12:54:31,387:INFO:            imblearn: 0.11.0
2024-02-13 12:54:31,387:INFO:   category_encoders: 2.6.3
2024-02-13 12:54:31,387:INFO:            lightgbm: 4.1.0
2024-02-13 12:54:31,387:INFO:               numba: 0.58.0
2024-02-13 12:54:31,387:INFO:            requests: 2.31.0
2024-02-13 12:54:31,387:INFO:          matplotlib: 3.8.0
2024-02-13 12:54:31,387:INFO:          scikitplot: 0.3.7
2024-02-13 12:54:31,387:INFO:         yellowbrick: 1.5
2024-02-13 12:54:31,387:INFO:              plotly: 5.9.0
2024-02-13 12:54:31,387:INFO:    plotly-resampler: Not installed
2024-02-13 12:54:31,387:INFO:             kaleido: 0.2.1
2024-02-13 12:54:31,387:INFO:           schemdraw: 0.15
2024-02-13 12:54:31,387:INFO:         statsmodels: 0.14.1
2024-02-13 12:54:31,387:INFO:              sktime: 0.21.1
2024-02-13 12:54:31,387:INFO:               tbats: 1.1.3
2024-02-13 12:54:31,387:INFO:            pmdarima: 2.0.4
2024-02-13 12:54:31,387:INFO:              psutil: 5.9.0
2024-02-13 12:54:31,387:INFO:          markupsafe: 2.1.1
2024-02-13 12:54:31,387:INFO:             pickle5: Not installed
2024-02-13 12:54:31,387:INFO:         cloudpickle: 2.2.1
2024-02-13 12:54:31,387:INFO:         deprecation: 2.1.0
2024-02-13 12:54:31,387:INFO:              xxhash: 2.0.2
2024-02-13 12:54:31,387:INFO:           wurlitzer: Not installed
2024-02-13 12:54:31,387:INFO:PyCaret optional dependencies:
2024-02-13 12:54:31,409:INFO:                shap: Not installed
2024-02-13 12:54:31,409:INFO:           interpret: Not installed
2024-02-13 12:54:31,409:INFO:                umap: Not installed
2024-02-13 12:54:31,409:INFO:     ydata_profiling: Not installed
2024-02-13 12:54:31,409:INFO:  explainerdashboard: Not installed
2024-02-13 12:54:31,409:INFO:             autoviz: Not installed
2024-02-13 12:54:31,409:INFO:           fairlearn: Not installed
2024-02-13 12:54:31,409:INFO:          deepchecks: Not installed
2024-02-13 12:54:31,409:INFO:             xgboost: 2.0.2
2024-02-13 12:54:31,409:INFO:            catboost: 1.2.2
2024-02-13 12:54:31,409:INFO:              kmodes: Not installed
2024-02-13 12:54:31,409:INFO:             mlxtend: Not installed
2024-02-13 12:54:31,409:INFO:       statsforecast: Not installed
2024-02-13 12:54:31,409:INFO:        tune_sklearn: Not installed
2024-02-13 12:54:31,409:INFO:                 ray: Not installed
2024-02-13 12:54:31,409:INFO:            hyperopt: Not installed
2024-02-13 12:54:31,409:INFO:              optuna: Not installed
2024-02-13 12:54:31,409:INFO:               skopt: Not installed
2024-02-13 12:54:31,409:INFO:              mlflow: Not installed
2024-02-13 12:54:31,409:INFO:              gradio: Not installed
2024-02-13 12:54:31,409:INFO:             fastapi: Not installed
2024-02-13 12:54:31,409:INFO:             uvicorn: Not installed
2024-02-13 12:54:31,409:INFO:              m2cgen: Not installed
2024-02-13 12:54:31,409:INFO:           evidently: Not installed
2024-02-13 12:54:31,409:INFO:               fugue: Not installed
2024-02-13 12:54:31,409:INFO:           streamlit: 1.16.0
2024-02-13 12:54:31,409:INFO:             prophet: Not installed
2024-02-13 12:54:31,409:INFO:None
2024-02-13 12:54:31,409:INFO:Set up data.
2024-02-13 12:54:31,417:INFO:Set up folding strategy.
2024-02-13 12:54:31,417:INFO:Set up train/test split.
2024-02-13 12:54:31,432:INFO:Set up index.
2024-02-13 12:54:31,432:INFO:Assigning column types.
2024-02-13 12:54:31,433:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-02-13 12:54:31,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-13 12:54:31,497:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-13 12:54:31,529:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:31,529:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:31,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-02-13 12:54:31,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-13 12:54:31,617:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:31,617:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:31,617:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-02-13 12:54:31,664:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-13 12:54:31,699:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:31,704:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:31,744:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-02-13 12:54:31,781:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:31,781:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:31,781:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-02-13 12:54:31,864:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:31,879:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:31,960:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:31,964:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:31,977:INFO:Preparing preprocessing pipeline...
2024-02-13 12:54:31,977:INFO:Set up label encoding.
2024-02-13 12:54:31,977:INFO:Set up simple imputation.
2024-02-13 12:54:31,977:INFO:Set up column name cleaning.
2024-02-13 12:54:32,016:INFO:Finished creating preprocessing pipeline.
2024-02-13 12:54:32,021:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lily\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Year', 'Month', 'Day', 'Hour',
                                             'NowCast Conc.', 'AQI',
                                             'Raw Conc.'],
                                    transformer=SimpleImputer(add_indicator=...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-02-13 12:54:32,022:INFO:Creating final display dataframe.
2024-02-13 12:54:32,111:INFO:Setup _display_container:                     Description   
0                    Session id  \
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                7501  
1                                        AQI Category  
2                                          Multiclass  
3   Good: 0, Hazardous: 1, Moderate: 2, Unhealthy:...  
4                                           (8366, 8)  
5                                           (8366, 8)  
6                                           (5856, 8)  
7                                           (2510, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               3c7c  
2024-02-13 12:54:32,203:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:32,212:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:32,275:INFO:Soft dependency imported: xgboost: 2.0.2
2024-02-13 12:54:32,291:INFO:Soft dependency imported: catboost: 1.2.2
2024-02-13 12:54:32,293:INFO:setup() successfully completed in 0.91s...............
2024-02-13 12:54:32,297:INFO:Initializing compare_models()
2024-02-13 12:54:32,297:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-02-13 12:54:32,297:INFO:Checking exceptions
2024-02-13 12:54:32,306:INFO:Preparing display monitor
2024-02-13 12:54:32,338:INFO:Initializing Logistic Regression
2024-02-13 12:54:32,338:INFO:Total runtime is 0.0 minutes
2024-02-13 12:54:32,338:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:32,338:INFO:Initializing create_model()
2024-02-13 12:54:32,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:32,338:INFO:Checking exceptions
2024-02-13 12:54:32,338:INFO:Importing libraries
2024-02-13 12:54:32,338:INFO:Copying training dataset
2024-02-13 12:54:32,350:INFO:Defining folds
2024-02-13 12:54:32,350:INFO:Declaring metric variables
2024-02-13 12:54:32,354:INFO:Importing untrained model
2024-02-13 12:54:32,358:INFO:Logistic Regression Imported successfully
2024-02-13 12:54:32,368:INFO:Starting cross validation
2024-02-13 12:54:32,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:40,869:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:40,909:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,916:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,916:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,932:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:40,932:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:40,963:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,963:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,963:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,963:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:40,978:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,978:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,978:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:40,994:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,009:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,010:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:41,010:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,026:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:41,041:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,041:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:41,041:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,057:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,057:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,073:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,073:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,073:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:41,073:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,088:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,088:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,104:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,109:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:41,120:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,340:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:42,355:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,496:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\linear_model\_logistic.py:460: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-02-13 12:54:42,512:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,512:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,512:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,527:INFO:Calculating mean and std
2024-02-13 12:54:42,527:INFO:Creating metrics dataframe
2024-02-13 12:54:42,548:INFO:Uploading results into container
2024-02-13 12:54:42,549:INFO:Uploading model into container now
2024-02-13 12:54:42,550:INFO:_master_model_container: 1
2024-02-13 12:54:42,550:INFO:_display_container: 2
2024-02-13 12:54:42,550:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7501, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-02-13 12:54:42,550:INFO:create_model() successfully completed......................................
2024-02-13 12:54:42,693:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:42,693:INFO:Creating metrics dataframe
2024-02-13 12:54:42,701:INFO:Initializing K Neighbors Classifier
2024-02-13 12:54:42,701:INFO:Total runtime is 0.17271588246027628 minutes
2024-02-13 12:54:42,706:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:42,706:INFO:Initializing create_model()
2024-02-13 12:54:42,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:42,707:INFO:Checking exceptions
2024-02-13 12:54:42,707:INFO:Importing libraries
2024-02-13 12:54:42,707:INFO:Copying training dataset
2024-02-13 12:54:42,717:INFO:Defining folds
2024-02-13 12:54:42,717:INFO:Declaring metric variables
2024-02-13 12:54:42,717:INFO:Importing untrained model
2024-02-13 12:54:42,717:INFO:K Neighbors Classifier Imported successfully
2024-02-13 12:54:42,733:INFO:Starting cross validation
2024-02-13 12:54:42,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:42,905:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,912:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,921:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,929:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,932:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,932:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,937:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,945:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,946:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,953:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,953:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,953:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,953:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,961:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,953:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,961:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,969:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,969:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,969:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,969:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,969:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,969:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:42,986:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,047:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,049:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,049:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,049:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,049:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,049:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,064:INFO:Calculating mean and std
2024-02-13 12:54:43,074:INFO:Creating metrics dataframe
2024-02-13 12:54:43,074:INFO:Uploading results into container
2024-02-13 12:54:43,074:INFO:Uploading model into container now
2024-02-13 12:54:43,074:INFO:_master_model_container: 2
2024-02-13 12:54:43,074:INFO:_display_container: 2
2024-02-13 12:54:43,074:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-02-13 12:54:43,074:INFO:create_model() successfully completed......................................
2024-02-13 12:54:43,201:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:43,201:INFO:Creating metrics dataframe
2024-02-13 12:54:43,215:INFO:Initializing Naive Bayes
2024-02-13 12:54:43,215:INFO:Total runtime is 0.18128427267074584 minutes
2024-02-13 12:54:43,216:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:43,219:INFO:Initializing create_model()
2024-02-13 12:54:43,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:43,219:INFO:Checking exceptions
2024-02-13 12:54:43,219:INFO:Importing libraries
2024-02-13 12:54:43,221:INFO:Copying training dataset
2024-02-13 12:54:43,227:INFO:Defining folds
2024-02-13 12:54:43,227:INFO:Declaring metric variables
2024-02-13 12:54:43,232:INFO:Importing untrained model
2024-02-13 12:54:43,235:INFO:Naive Bayes Imported successfully
2024-02-13 12:54:43,246:INFO:Starting cross validation
2024-02-13 12:54:43,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:43,329:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,329:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,337:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,337:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,337:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,362:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,362:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,362:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,362:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,374:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,374:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,374:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,386:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,394:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,395:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,409:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,416:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,417:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,418:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,418:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,418:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,435:INFO:Calculating mean and std
2024-02-13 12:54:43,435:INFO:Creating metrics dataframe
2024-02-13 12:54:43,439:INFO:Uploading results into container
2024-02-13 12:54:43,439:INFO:Uploading model into container now
2024-02-13 12:54:43,439:INFO:_master_model_container: 3
2024-02-13 12:54:43,439:INFO:_display_container: 2
2024-02-13 12:54:43,439:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-02-13 12:54:43,439:INFO:create_model() successfully completed......................................
2024-02-13 12:54:43,565:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:43,565:INFO:Creating metrics dataframe
2024-02-13 12:54:43,576:INFO:Initializing Decision Tree Classifier
2024-02-13 12:54:43,576:INFO:Total runtime is 0.1873095432917277 minutes
2024-02-13 12:54:43,581:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:43,581:INFO:Initializing create_model()
2024-02-13 12:54:43,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:43,581:INFO:Checking exceptions
2024-02-13 12:54:43,581:INFO:Importing libraries
2024-02-13 12:54:43,585:INFO:Copying training dataset
2024-02-13 12:54:43,590:INFO:Defining folds
2024-02-13 12:54:43,590:INFO:Declaring metric variables
2024-02-13 12:54:43,594:INFO:Importing untrained model
2024-02-13 12:54:43,603:INFO:Decision Tree Classifier Imported successfully
2024-02-13 12:54:43,615:INFO:Starting cross validation
2024-02-13 12:54:43,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:43,694:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,697:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,710:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,710:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,713:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,714:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,714:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,714:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,714:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,714:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,746:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,750:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,751:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,751:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,751:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,766:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,782:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,787:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,787:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,787:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,787:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,798:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:43,798:INFO:Calculating mean and std
2024-02-13 12:54:43,809:INFO:Creating metrics dataframe
2024-02-13 12:54:43,812:INFO:Uploading results into container
2024-02-13 12:54:43,812:INFO:Uploading model into container now
2024-02-13 12:54:43,813:INFO:_master_model_container: 4
2024-02-13 12:54:43,813:INFO:_display_container: 2
2024-02-13 12:54:43,813:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7501, splitter='best')
2024-02-13 12:54:43,813:INFO:create_model() successfully completed......................................
2024-02-13 12:54:43,937:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:43,937:INFO:Creating metrics dataframe
2024-02-13 12:54:43,937:INFO:Initializing SVM - Linear Kernel
2024-02-13 12:54:43,937:INFO:Total runtime is 0.1933195908864339 minutes
2024-02-13 12:54:43,949:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:43,949:INFO:Initializing create_model()
2024-02-13 12:54:43,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:43,949:INFO:Checking exceptions
2024-02-13 12:54:43,949:INFO:Importing libraries
2024-02-13 12:54:43,949:INFO:Copying training dataset
2024-02-13 12:54:43,955:INFO:Defining folds
2024-02-13 12:54:43,955:INFO:Declaring metric variables
2024-02-13 12:54:43,961:INFO:Importing untrained model
2024-02-13 12:54:43,966:INFO:SVM - Linear Kernel Imported successfully
2024-02-13 12:54:43,971:INFO:Starting cross validation
2024-02-13 12:54:43,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:44,187:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,187:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,187:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,196:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,196:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,204:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,204:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,212:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,213:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,215:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,215:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,252:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,253:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,253:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,253:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,253:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,268:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,268:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,268:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,268:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,283:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,296:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,296:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,307:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,313:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,346:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,382:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,382:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,382:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,397:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,401:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,401:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,412:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,415:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,427:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,430:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,430:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,434:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,438:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,440:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,442:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,446:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,446:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,450:INFO:Calculating mean and std
2024-02-13 12:54:44,450:INFO:Creating metrics dataframe
2024-02-13 12:54:44,450:INFO:Uploading results into container
2024-02-13 12:54:44,458:INFO:Uploading model into container now
2024-02-13 12:54:44,458:INFO:_master_model_container: 5
2024-02-13 12:54:44,458:INFO:_display_container: 2
2024-02-13 12:54:44,460:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7501, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-02-13 12:54:44,460:INFO:create_model() successfully completed......................................
2024-02-13 12:54:44,569:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:44,585:INFO:Creating metrics dataframe
2024-02-13 12:54:44,589:INFO:Initializing Ridge Classifier
2024-02-13 12:54:44,589:INFO:Total runtime is 0.20419254302978515 minutes
2024-02-13 12:54:44,598:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:44,598:INFO:Initializing create_model()
2024-02-13 12:54:44,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:44,599:INFO:Checking exceptions
2024-02-13 12:54:44,599:INFO:Importing libraries
2024-02-13 12:54:44,599:INFO:Copying training dataset
2024-02-13 12:54:44,605:INFO:Defining folds
2024-02-13 12:54:44,605:INFO:Declaring metric variables
2024-02-13 12:54:44,608:INFO:Importing untrained model
2024-02-13 12:54:44,614:INFO:Ridge Classifier Imported successfully
2024-02-13 12:54:44,622:INFO:Starting cross validation
2024-02-13 12:54:44,623:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:44,694:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,694:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,710:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,710:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,715:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,726:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,742:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,746:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,773:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,773:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 399, in _score
    y_pred = method_caller(clf, "predict_proba", X, pos_label=self._get_pos_label())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 86, in _cached_call
    result, _ = _get_response_values(
                ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_response.py", line 73, in _get_response_values
    prediction_method = _check_response_method(estimator, response_method)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 1940, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-02-13 12:54:44,773:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,773:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,773:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,773:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:44,789:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:44,795:INFO:Calculating mean and std
2024-02-13 12:54:44,795:INFO:Creating metrics dataframe
2024-02-13 12:54:44,804:INFO:Uploading results into container
2024-02-13 12:54:44,804:INFO:Uploading model into container now
2024-02-13 12:54:44,804:INFO:_master_model_container: 6
2024-02-13 12:54:44,804:INFO:_display_container: 2
2024-02-13 12:54:44,804:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7501, solver='auto',
                tol=0.0001)
2024-02-13 12:54:44,804:INFO:create_model() successfully completed......................................
2024-02-13 12:54:44,932:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:44,932:INFO:Creating metrics dataframe
2024-02-13 12:54:44,948:INFO:Initializing Random Forest Classifier
2024-02-13 12:54:44,948:INFO:Total runtime is 0.21017423470815022 minutes
2024-02-13 12:54:44,952:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:44,952:INFO:Initializing create_model()
2024-02-13 12:54:44,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:44,952:INFO:Checking exceptions
2024-02-13 12:54:44,952:INFO:Importing libraries
2024-02-13 12:54:44,952:INFO:Copying training dataset
2024-02-13 12:54:44,965:INFO:Defining folds
2024-02-13 12:54:44,965:INFO:Declaring metric variables
2024-02-13 12:54:44,971:INFO:Importing untrained model
2024-02-13 12:54:44,971:INFO:Random Forest Classifier Imported successfully
2024-02-13 12:54:44,985:INFO:Starting cross validation
2024-02-13 12:54:44,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:45,626:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,626:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,626:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,626:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,626:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,642:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,642:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,642:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,642:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,658:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,658:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,658:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,793:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,796:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,803:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,808:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,808:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,817:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,825:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,835:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:45,847:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,001:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,008:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,015:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,148:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,148:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,164:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,164:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,164:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,179:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,179:INFO:Calculating mean and std
2024-02-13 12:54:46,179:INFO:Creating metrics dataframe
2024-02-13 12:54:46,179:INFO:Uploading results into container
2024-02-13 12:54:46,179:INFO:Uploading model into container now
2024-02-13 12:54:46,179:INFO:_master_model_container: 7
2024-02-13 12:54:46,179:INFO:_display_container: 2
2024-02-13 12:54:46,179:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7501, verbose=0, warm_start=False)
2024-02-13 12:54:46,179:INFO:create_model() successfully completed......................................
2024-02-13 12:54:46,329:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:46,329:INFO:Creating metrics dataframe
2024-02-13 12:54:46,331:INFO:Initializing Quadratic Discriminant Analysis
2024-02-13 12:54:46,331:INFO:Total runtime is 0.23322906096776325 minutes
2024-02-13 12:54:46,344:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:46,344:INFO:Initializing create_model()
2024-02-13 12:54:46,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:46,346:INFO:Checking exceptions
2024-02-13 12:54:46,346:INFO:Importing libraries
2024-02-13 12:54:46,346:INFO:Copying training dataset
2024-02-13 12:54:46,352:INFO:Defining folds
2024-02-13 12:54:46,352:INFO:Declaring metric variables
2024-02-13 12:54:46,352:INFO:Importing untrained model
2024-02-13 12:54:46,362:INFO:Quadratic Discriminant Analysis Imported successfully
2024-02-13 12:54:46,370:INFO:Starting cross validation
2024-02-13 12:54:46,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:46,445:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-13 12:54:46,446:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-13 12:54:46,446:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,453:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,461:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,469:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,469:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-13 12:54:46,475:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,475:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,475:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,476:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,476:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,485:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,516:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,518:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,518:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,518:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,518:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-13 12:54:46,530:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-02-13 12:54:46,536:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,536:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,536:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-02-13 12:54:46,539:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,549:WARNING:C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_scorer.py", line 401, in _score
    return self._sign * self._score_func(y, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\_param_validation.py", line 211, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_ranking.py", line 605, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 959, in check_array
    _assert_all_finite(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 124, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\lily\anaconda3\Lib\site-packages\sklearn\utils\validation.py", line 173, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-02-13 12:54:46,549:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,549:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,549:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,549:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,549:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,549:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:46,561:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:46,570:INFO:Calculating mean and std
2024-02-13 12:54:46,570:INFO:Creating metrics dataframe
2024-02-13 12:54:46,573:INFO:Uploading results into container
2024-02-13 12:54:46,575:INFO:Uploading model into container now
2024-02-13 12:54:46,575:INFO:_master_model_container: 8
2024-02-13 12:54:46,575:INFO:_display_container: 2
2024-02-13 12:54:46,575:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-02-13 12:54:46,575:INFO:create_model() successfully completed......................................
2024-02-13 12:54:46,704:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:46,704:INFO:Creating metrics dataframe
2024-02-13 12:54:46,718:INFO:Initializing Ada Boost Classifier
2024-02-13 12:54:46,718:INFO:Total runtime is 0.2396737178166707 minutes
2024-02-13 12:54:46,718:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:46,718:INFO:Initializing create_model()
2024-02-13 12:54:46,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:46,718:INFO:Checking exceptions
2024-02-13 12:54:46,718:INFO:Importing libraries
2024-02-13 12:54:46,718:INFO:Copying training dataset
2024-02-13 12:54:46,738:INFO:Defining folds
2024-02-13 12:54:46,738:INFO:Declaring metric variables
2024-02-13 12:54:46,746:INFO:Importing untrained model
2024-02-13 12:54:46,749:INFO:Ada Boost Classifier Imported successfully
2024-02-13 12:54:46,765:INFO:Starting cross validation
2024-02-13 12:54:46,765:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:47,219:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,222:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,222:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,237:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,253:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,253:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,253:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,253:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,332:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,332:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,332:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,332:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,347:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,347:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,347:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,347:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,347:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,355:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,367:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,367:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,368:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,605:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,607:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,607:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,620:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,623:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,623:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,638:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:54:47,638:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:47,638:INFO:Calculating mean and std
2024-02-13 12:54:47,638:INFO:Creating metrics dataframe
2024-02-13 12:54:47,638:INFO:Uploading results into container
2024-02-13 12:54:47,654:INFO:Uploading model into container now
2024-02-13 12:54:47,654:INFO:_master_model_container: 9
2024-02-13 12:54:47,654:INFO:_display_container: 2
2024-02-13 12:54:47,654:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7501)
2024-02-13 12:54:47,654:INFO:create_model() successfully completed......................................
2024-02-13 12:54:47,783:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:47,783:INFO:Creating metrics dataframe
2024-02-13 12:54:47,805:INFO:Initializing Gradient Boosting Classifier
2024-02-13 12:54:47,805:INFO:Total runtime is 0.25778537591298417 minutes
2024-02-13 12:54:47,812:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:47,812:INFO:Initializing create_model()
2024-02-13 12:54:47,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:47,812:INFO:Checking exceptions
2024-02-13 12:54:47,812:INFO:Importing libraries
2024-02-13 12:54:47,812:INFO:Copying training dataset
2024-02-13 12:54:47,820:INFO:Defining folds
2024-02-13 12:54:47,820:INFO:Declaring metric variables
2024-02-13 12:54:47,829:INFO:Importing untrained model
2024-02-13 12:54:47,831:INFO:Gradient Boosting Classifier Imported successfully
2024-02-13 12:54:47,844:INFO:Starting cross validation
2024-02-13 12:54:47,846:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:52,106:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,106:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,122:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,129:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,129:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,138:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,138:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,138:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,138:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,154:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,154:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,154:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,154:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,154:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,169:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,169:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,169:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,169:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,188:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,188:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,188:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,188:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,188:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:52,188:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,355:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,355:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,355:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,371:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,387:INFO:Calculating mean and std
2024-02-13 12:54:55,387:INFO:Creating metrics dataframe
2024-02-13 12:54:55,387:INFO:Uploading results into container
2024-02-13 12:54:55,387:INFO:Uploading model into container now
2024-02-13 12:54:55,387:INFO:_master_model_container: 10
2024-02-13 12:54:55,387:INFO:_display_container: 2
2024-02-13 12:54:55,387:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-13 12:54:55,387:INFO:create_model() successfully completed......................................
2024-02-13 12:54:55,517:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:55,517:INFO:Creating metrics dataframe
2024-02-13 12:54:55,533:INFO:Initializing Linear Discriminant Analysis
2024-02-13 12:54:55,533:INFO:Total runtime is 0.38658299446105954 minutes
2024-02-13 12:54:55,539:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:55,539:INFO:Initializing create_model()
2024-02-13 12:54:55,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:55,539:INFO:Checking exceptions
2024-02-13 12:54:55,539:INFO:Importing libraries
2024-02-13 12:54:55,539:INFO:Copying training dataset
2024-02-13 12:54:55,547:INFO:Defining folds
2024-02-13 12:54:55,547:INFO:Declaring metric variables
2024-02-13 12:54:55,551:INFO:Importing untrained model
2024-02-13 12:54:55,554:INFO:Linear Discriminant Analysis Imported successfully
2024-02-13 12:54:55,567:INFO:Starting cross validation
2024-02-13 12:54:55,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:55,648:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,648:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,648:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,648:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,648:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,664:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,679:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,679:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,679:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,679:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,679:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,679:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,679:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,695:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,695:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,695:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,705:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,727:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,727:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,739:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,743:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,748:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,748:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:55,758:INFO:Calculating mean and std
2024-02-13 12:54:55,758:INFO:Creating metrics dataframe
2024-02-13 12:54:55,765:INFO:Uploading results into container
2024-02-13 12:54:55,765:INFO:Uploading model into container now
2024-02-13 12:54:55,767:INFO:_master_model_container: 11
2024-02-13 12:54:55,767:INFO:_display_container: 2
2024-02-13 12:54:55,767:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-02-13 12:54:55,767:INFO:create_model() successfully completed......................................
2024-02-13 12:54:55,885:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:55,885:INFO:Creating metrics dataframe
2024-02-13 12:54:55,903:INFO:Initializing Extra Trees Classifier
2024-02-13 12:54:55,903:INFO:Total runtime is 0.39275611241658526 minutes
2024-02-13 12:54:55,907:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:55,907:INFO:Initializing create_model()
2024-02-13 12:54:55,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:55,907:INFO:Checking exceptions
2024-02-13 12:54:55,907:INFO:Importing libraries
2024-02-13 12:54:55,907:INFO:Copying training dataset
2024-02-13 12:54:55,914:INFO:Defining folds
2024-02-13 12:54:55,915:INFO:Declaring metric variables
2024-02-13 12:54:55,916:INFO:Importing untrained model
2024-02-13 12:54:55,919:INFO:Extra Trees Classifier Imported successfully
2024-02-13 12:54:55,933:INFO:Starting cross validation
2024-02-13 12:54:55,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:56,443:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,459:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,474:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,474:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,540:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,521:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,553:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,553:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,569:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,663:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,663:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,710:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,710:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,710:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,728:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,750:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,765:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,776:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,822:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,830:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,831:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,844:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,848:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:56,862:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,010:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,017:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,022:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,062:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,062:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,076:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,076:INFO:Calculating mean and std
2024-02-13 12:54:57,076:INFO:Creating metrics dataframe
2024-02-13 12:54:57,076:INFO:Uploading results into container
2024-02-13 12:54:57,076:INFO:Uploading model into container now
2024-02-13 12:54:57,076:INFO:_master_model_container: 12
2024-02-13 12:54:57,076:INFO:_display_container: 2
2024-02-13 12:54:57,076:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7501, verbose=0, warm_start=False)
2024-02-13 12:54:57,091:INFO:create_model() successfully completed......................................
2024-02-13 12:54:57,202:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:57,216:INFO:Creating metrics dataframe
2024-02-13 12:54:57,224:INFO:Initializing Extreme Gradient Boosting
2024-02-13 12:54:57,224:INFO:Total runtime is 0.41477072238922114 minutes
2024-02-13 12:54:57,231:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:57,231:INFO:Initializing create_model()
2024-02-13 12:54:57,231:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:57,231:INFO:Checking exceptions
2024-02-13 12:54:57,232:INFO:Importing libraries
2024-02-13 12:54:57,232:INFO:Copying training dataset
2024-02-13 12:54:57,238:INFO:Defining folds
2024-02-13 12:54:57,238:INFO:Declaring metric variables
2024-02-13 12:54:57,241:INFO:Importing untrained model
2024-02-13 12:54:57,246:INFO:Extreme Gradient Boosting Imported successfully
2024-02-13 12:54:57,254:INFO:Starting cross validation
2024-02-13 12:54:57,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:54:57,713:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,713:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,713:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,713:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,729:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,729:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,729:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,729:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,729:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,741:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,741:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,745:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,745:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,745:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,745:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,745:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,745:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,745:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,760:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,760:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,767:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,767:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,767:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:57,767:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:58,043:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:58,059:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:58,064:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:58,066:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:58,075:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:54:58,075:INFO:Calculating mean and std
2024-02-13 12:54:58,075:INFO:Creating metrics dataframe
2024-02-13 12:54:58,075:INFO:Uploading results into container
2024-02-13 12:54:58,075:INFO:Uploading model into container now
2024-02-13 12:54:58,075:INFO:_master_model_container: 13
2024-02-13 12:54:58,075:INFO:_display_container: 2
2024-02-13 12:54:58,075:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-02-13 12:54:58,075:INFO:create_model() successfully completed......................................
2024-02-13 12:54:58,220:INFO:SubProcess create_model() end ==================================
2024-02-13 12:54:58,220:INFO:Creating metrics dataframe
2024-02-13 12:54:58,227:INFO:Initializing Light Gradient Boosting Machine
2024-02-13 12:54:58,227:INFO:Total runtime is 0.43149768511454256 minutes
2024-02-13 12:54:58,232:INFO:SubProcess create_model() called ==================================
2024-02-13 12:54:58,232:INFO:Initializing create_model()
2024-02-13 12:54:58,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:54:58,232:INFO:Checking exceptions
2024-02-13 12:54:58,232:INFO:Importing libraries
2024-02-13 12:54:58,232:INFO:Copying training dataset
2024-02-13 12:54:58,242:INFO:Defining folds
2024-02-13 12:54:58,242:INFO:Declaring metric variables
2024-02-13 12:54:58,246:INFO:Importing untrained model
2024-02-13 12:54:58,252:INFO:Light Gradient Boosting Machine Imported successfully
2024-02-13 12:54:58,263:INFO:Starting cross validation
2024-02-13 12:54:58,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:55:00,876:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:00,892:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:00,892:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,096:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,096:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,112:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,269:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,284:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,284:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,457:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,457:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,473:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,567:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,567:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,583:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,598:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,598:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,614:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:01,991:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,006:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,006:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,084:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,084:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,100:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,806:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,806:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,821:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,869:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,869:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,884:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:02,884:INFO:Calculating mean and std
2024-02-13 12:55:02,901:INFO:Creating metrics dataframe
2024-02-13 12:55:02,904:INFO:Uploading results into container
2024-02-13 12:55:02,905:INFO:Uploading model into container now
2024-02-13 12:55:02,905:INFO:_master_model_container: 14
2024-02-13 12:55:02,906:INFO:_display_container: 2
2024-02-13 12:55:02,906:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7501, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-02-13 12:55:02,906:INFO:create_model() successfully completed......................................
2024-02-13 12:55:03,050:INFO:SubProcess create_model() end ==================================
2024-02-13 12:55:03,050:INFO:Creating metrics dataframe
2024-02-13 12:55:03,057:INFO:Initializing CatBoost Classifier
2024-02-13 12:55:03,057:INFO:Total runtime is 0.5119981884956359 minutes
2024-02-13 12:55:03,067:INFO:SubProcess create_model() called ==================================
2024-02-13 12:55:03,067:INFO:Initializing create_model()
2024-02-13 12:55:03,067:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:55:03,067:INFO:Checking exceptions
2024-02-13 12:55:03,067:INFO:Importing libraries
2024-02-13 12:55:03,067:INFO:Copying training dataset
2024-02-13 12:55:03,074:INFO:Defining folds
2024-02-13 12:55:03,074:INFO:Declaring metric variables
2024-02-13 12:55:03,076:INFO:Importing untrained model
2024-02-13 12:55:03,082:INFO:CatBoost Classifier Imported successfully
2024-02-13 12:55:03,090:INFO:Starting cross validation
2024-02-13 12:55:03,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:55:26,352:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,368:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,368:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,368:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,368:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,368:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,368:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,384:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,399:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,410:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,415:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,415:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,432:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,462:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,462:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:26,478:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,017:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,032:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,032:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,142:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,142:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,158:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,163:INFO:Calculating mean and std
2024-02-13 12:55:33,174:INFO:Creating metrics dataframe
2024-02-13 12:55:33,179:INFO:Uploading results into container
2024-02-13 12:55:33,180:INFO:Uploading model into container now
2024-02-13 12:55:33,180:INFO:_master_model_container: 15
2024-02-13 12:55:33,180:INFO:_display_container: 2
2024-02-13 12:55:33,180:INFO:<catboost.core.CatBoostClassifier object at 0x00000181E8CEADD0>
2024-02-13 12:55:33,180:INFO:create_model() successfully completed......................................
2024-02-13 12:55:33,346:INFO:SubProcess create_model() end ==================================
2024-02-13 12:55:33,346:INFO:Creating metrics dataframe
2024-02-13 12:55:33,367:INFO:Initializing Dummy Classifier
2024-02-13 12:55:33,367:INFO:Total runtime is 1.0171498974164326 minutes
2024-02-13 12:55:33,375:INFO:SubProcess create_model() called ==================================
2024-02-13 12:55:33,375:INFO:Initializing create_model()
2024-02-13 12:55:33,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EAF4A3D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:55:33,375:INFO:Checking exceptions
2024-02-13 12:55:33,375:INFO:Importing libraries
2024-02-13 12:55:33,375:INFO:Copying training dataset
2024-02-13 12:55:33,391:INFO:Defining folds
2024-02-13 12:55:33,391:INFO:Declaring metric variables
2024-02-13 12:55:33,396:INFO:Importing untrained model
2024-02-13 12:55:33,403:INFO:Dummy Classifier Imported successfully
2024-02-13 12:55:33,413:INFO:Starting cross validation
2024-02-13 12:55:33,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:55:33,480:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,491:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,497:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,504:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,504:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,509:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,512:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,513:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,513:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,520:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,527:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,531:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,532:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,536:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,536:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,536:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,536:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,554:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,560:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,560:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,560:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,560:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,560:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,560:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,576:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,592:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,592:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,592:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,592:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,604:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,605:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,611:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1469: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-02-13 12:55:33,614:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:33,627:INFO:Calculating mean and std
2024-02-13 12:55:33,630:INFO:Creating metrics dataframe
2024-02-13 12:55:33,631:INFO:Uploading results into container
2024-02-13 12:55:33,631:INFO:Uploading model into container now
2024-02-13 12:55:33,631:INFO:_master_model_container: 16
2024-02-13 12:55:33,631:INFO:_display_container: 2
2024-02-13 12:55:33,631:INFO:DummyClassifier(constant=None, random_state=7501, strategy='prior')
2024-02-13 12:55:33,631:INFO:create_model() successfully completed......................................
2024-02-13 12:55:33,766:INFO:SubProcess create_model() end ==================================
2024-02-13 12:55:33,766:INFO:Creating metrics dataframe
2024-02-13 12:55:33,796:INFO:Initializing create_model()
2024-02-13 12:55:33,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7501, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:55:33,796:INFO:Checking exceptions
2024-02-13 12:55:33,802:INFO:Importing libraries
2024-02-13 12:55:33,802:INFO:Copying training dataset
2024-02-13 12:55:33,810:INFO:Defining folds
2024-02-13 12:55:33,810:INFO:Declaring metric variables
2024-02-13 12:55:33,810:INFO:Importing untrained model
2024-02-13 12:55:33,810:INFO:Declaring custom model
2024-02-13 12:55:33,812:INFO:Decision Tree Classifier Imported successfully
2024-02-13 12:55:33,813:INFO:Cross validation set to False
2024-02-13 12:55:33,813:INFO:Fitting Model
2024-02-13 12:55:33,834:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7501, splitter='best')
2024-02-13 12:55:33,834:INFO:create_model() successfully completed......................................
2024-02-13 12:55:34,019:INFO:_master_model_container: 16
2024-02-13 12:55:34,019:INFO:_display_container: 2
2024-02-13 12:55:34,019:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7501, splitter='best')
2024-02-13 12:55:34,019:INFO:compare_models() successfully completed......................................
2024-02-13 12:55:34,028:INFO:Initializing create_model()
2024-02-13 12:55:34,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:55:34,029:INFO:Checking exceptions
2024-02-13 12:55:34,047:INFO:Importing libraries
2024-02-13 12:55:34,047:INFO:Copying training dataset
2024-02-13 12:55:34,062:INFO:Defining folds
2024-02-13 12:55:34,063:INFO:Declaring metric variables
2024-02-13 12:55:34,063:INFO:Importing untrained model
2024-02-13 12:55:34,073:INFO:Gradient Boosting Classifier Imported successfully
2024-02-13 12:55:34,084:INFO:Starting cross validation
2024-02-13 12:55:34,084:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:55:38,282:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,297:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,297:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,297:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,318:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,318:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,329:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,329:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,329:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,329:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,329:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,345:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,573:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,589:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,589:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,604:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,620:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,628:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,649:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,658:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,663:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,666:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,669:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:38,672:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:41,730:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:41,730:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:41,746:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:41,754:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:41,764:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:41,766:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:55:41,776:INFO:Calculating mean and std
2024-02-13 12:55:41,776:INFO:Creating metrics dataframe
2024-02-13 12:55:41,796:INFO:Finalizing model
2024-02-13 12:55:44,984:INFO:Uploading results into container
2024-02-13 12:55:44,984:INFO:Uploading model into container now
2024-02-13 12:55:45,009:INFO:_master_model_container: 17
2024-02-13 12:55:45,009:INFO:_display_container: 3
2024-02-13 12:55:45,009:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-13 12:55:45,009:INFO:create_model() successfully completed......................................
2024-02-13 12:55:45,229:INFO:Initializing tune_model()
2024-02-13 12:55:45,229:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-02-13 12:55:45,229:INFO:Checking exceptions
2024-02-13 12:55:45,253:INFO:Copying training dataset
2024-02-13 12:55:45,263:INFO:Checking base model
2024-02-13 12:55:45,265:INFO:Base model : Gradient Boosting Classifier
2024-02-13 12:55:45,265:INFO:Declaring metric variables
2024-02-13 12:55:45,273:INFO:Defining Hyperparameters
2024-02-13 12:55:45,471:INFO:Tuning with n_jobs=-1
2024-02-13 12:55:45,471:INFO:Initializing RandomizedSearchCV
2024-02-13 12:56:52,725:INFO:best_params: {'actual_estimator__subsample': 0.5, 'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__learning_rate': 0.005}
2024-02-13 12:56:52,725:INFO:Hyperparameter search completed
2024-02-13 12:56:52,725:INFO:SubProcess create_model() called ==================================
2024-02-13 12:56:52,725:INFO:Initializing create_model()
2024-02-13 12:56:52,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000181EACF96D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.5, 'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.3, 'max_features': 'log2', 'max_depth': 6, 'learning_rate': 0.005})
2024-02-13 12:56:52,725:INFO:Checking exceptions
2024-02-13 12:56:52,725:INFO:Importing libraries
2024-02-13 12:56:52,725:INFO:Copying training dataset
2024-02-13 12:56:52,732:INFO:Defining folds
2024-02-13 12:56:52,732:INFO:Declaring metric variables
2024-02-13 12:56:52,732:INFO:Importing untrained model
2024-02-13 12:56:52,732:INFO:Declaring custom model
2024-02-13 12:56:52,741:INFO:Gradient Boosting Classifier Imported successfully
2024-02-13 12:56:52,749:INFO:Starting cross validation
2024-02-13 12:56:52,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:56:58,591:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,591:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,598:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,598:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,606:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,606:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,646:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,646:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,661:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:58,677:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,501:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,509:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,517:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,525:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,534:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,534:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,534:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,550:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,550:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,552:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,552:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:56:59,568:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:02,916:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:02,929:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:02,929:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:02,965:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:02,982:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:02,982:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:02,994:INFO:Calculating mean and std
2024-02-13 12:57:02,997:INFO:Creating metrics dataframe
2024-02-13 12:57:02,999:INFO:Finalizing model
2024-02-13 12:57:06,710:INFO:Uploading results into container
2024-02-13 12:57:06,713:INFO:Uploading model into container now
2024-02-13 12:57:06,715:INFO:_master_model_container: 18
2024-02-13 12:57:06,715:INFO:_display_container: 4
2024-02-13 12:57:06,715:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.005, loss='log_loss', max_depth=6,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=3,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           random_state=7501, subsample=0.5, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-13 12:57:06,715:INFO:create_model() successfully completed......................................
2024-02-13 12:57:06,846:INFO:SubProcess create_model() end ==================================
2024-02-13 12:57:06,846:INFO:choose_better activated
2024-02-13 12:57:06,852:INFO:SubProcess create_model() called ==================================
2024-02-13 12:57:06,854:INFO:Initializing create_model()
2024-02-13 12:57:06,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-02-13 12:57:06,854:INFO:Checking exceptions
2024-02-13 12:57:06,855:INFO:Importing libraries
2024-02-13 12:57:06,855:INFO:Copying training dataset
2024-02-13 12:57:06,855:INFO:Defining folds
2024-02-13 12:57:06,855:INFO:Declaring metric variables
2024-02-13 12:57:06,855:INFO:Importing untrained model
2024-02-13 12:57:06,855:INFO:Declaring custom model
2024-02-13 12:57:06,863:INFO:Gradient Boosting Classifier Imported successfully
2024-02-13 12:57:06,863:INFO:Starting cross validation
2024-02-13 12:57:06,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-02-13 12:57:11,306:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,306:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,306:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,322:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,322:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,322:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,322:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,322:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,337:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,722:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,730:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,747:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,763:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,771:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:11,780:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,081:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,090:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,098:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,098:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,108:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,116:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,176:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,182:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:12,188:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:14,927:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:14,935:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:14,935:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:14,945:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:14,945:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:14,952:WARNING:C:\Users\lily\anaconda3\Lib\site-packages\sklearn\metrics\_classification.py:1521: UserWarning: Note that pos_label (set to 'Very Unhealthy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-02-13 12:57:14,962:INFO:Calculating mean and std
2024-02-13 12:57:14,966:INFO:Creating metrics dataframe
2024-02-13 12:57:14,968:INFO:Finalizing model
2024-02-13 12:57:18,460:INFO:Uploading results into container
2024-02-13 12:57:18,460:INFO:Uploading model into container now
2024-02-13 12:57:18,460:INFO:_master_model_container: 19
2024-02-13 12:57:18,460:INFO:_display_container: 5
2024-02-13 12:57:18,460:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-13 12:57:18,460:INFO:create_model() successfully completed......................................
2024-02-13 12:57:18,586:INFO:SubProcess create_model() end ==================================
2024-02-13 12:57:18,586:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9995
2024-02-13 12:57:18,586:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.005, loss='log_loss', max_depth=6,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0.3, min_samples_leaf=3,
                           min_samples_split=10, min_weight_fraction_leaf=0.0,
                           n_estimators=230, n_iter_no_change=None,
                           random_state=7501, subsample=0.5, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.999
2024-02-13 12:57:18,586:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2024-02-13 12:57:18,586:INFO:choose_better completed
2024-02-13 12:57:18,586:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-02-13 12:57:18,603:INFO:_master_model_container: 19
2024-02-13 12:57:18,603:INFO:_display_container: 4
2024-02-13 12:57:18,606:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-02-13 12:57:18,606:INFO:tune_model() successfully completed......................................
2024-02-13 12:57:18,737:INFO:Initializing evaluate_model()
2024-02-13 12:57:18,737:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-02-13 12:57:18,766:INFO:Initializing plot_model()
2024-02-13 12:57:18,766:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000181E99A23D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7501, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-02-13 12:57:18,766:INFO:Checking exceptions
2024-02-13 12:57:18,783:INFO:Preloading libraries
2024-02-13 12:57:18,826:INFO:Copying training dataset
2024-02-13 12:57:18,826:INFO:Plot type: pipeline
2024-02-13 12:57:19,102:INFO:Visual Rendered Successfully
2024-02-13 12:57:19,239:INFO:plot_model() successfully completed......................................
